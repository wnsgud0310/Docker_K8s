apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-factorial-app
  namespace: factorial
spec:
  replicas: 2
  ################# 02.업데이트 전략 추가 - start ###################
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0


  ################# 02.업데이트 전략 추가 - end  ###################
  selector:
    matchLabels:
      app: factorial-app
  template:
    metadata:
      labels:
        app: factorial-app
    spec:
      ################# 03.graceful shutdown 추가- start ###################
      terminationGracePeriodSeconds: 60

      ################# 03.graceful shutdown - end  ###################

      containers:
        - name: factorial
          image: wnsgud0310/factorial-app:0.0.4

      ################# 04. lifecycle hook  추가- start ###################
          lifecycle:
            preStop: # 컨테이너가 종료( 계획적인 의도에 따른 종료, 예. rollingupdate 등)
                     # 될 때 실행되는 hook
              exec:
                # 10초 정도 sleep 한 후에 애플리케이션에 종료 신호를 보내도록 함.
                command: ["/bin/sh", "-c", "sleep 10"]
      ################# 04. lifecycle hook  추가- end ###################

      ################# 05. probe  추가- start ###################
          startupProbe:
            httpGet:
              path: /probe/startup
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /probe/ready
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 1
            successThreshold: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /probe/live
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 1
            failureThreshold: 3
      ################# 05. probe  추가- end ###################




# kubectl apply -f factorial-app-deploy3.yaml
# kubectl -n factorial get pods
# kubectl -n factorial describe pod pid-id